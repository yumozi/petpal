# 1. All the packages you need to install
For the frontend, all the necessary packages are included in the package.json file. To install them, run "npm install" in the frontend directory.
For the backend, all the necessary packages are included in the requirements.txt file. To install them, run "pip install -r requirements.txt" in the backend directory.

# 2. How to configure various servers (e.g., Nginx, Apache, etc)
For local deployment:
1. Run python manage.py runserver in the backend directory.
2. Run npm start in the frontend directory.

For public deployment (backend on render):
1. Create a new postgresSQL database on render.com
2. Note the internal database URL of the database
3. Create a new web service on render.com by selecing the backend directory (must be on github)
4. Add the following environment variables to the web service:
    - DATABASE_URL: the internal database URL of the database
    - SECRET_KEY: a secret key for the Django app
    - DEBUG: False
    - ALLOWED_HOSTS: the URL of the frontend, come back and add this after deploying the frontend
5. Configure "sh build.sh" as the build command, which is a script that installs necessary packages and runs migrations
6. Configure "gunicorn petpal.wsgi" as the start command
5. Deploy the web service

For public deployment (frontend on vercel):
1. Create a new web service on vercel.com by selecing the frontend directory (must be on github)
2. Add the following environment variables to the web service:
    - REACT_APP_SEREVER: the URL of the backend on render.com
3. Deploy the web service